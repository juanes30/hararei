/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package co.devspark.hararei

import kotlin.test.Test
import kotlin.test.assertFailsWith
import kotlin.test.assertTrue
import kotlin.test.expect

class HolidaysCoTest {
    @Test
    fun test_there_data() {
        val classUnderTest = HolidaysCo()
        assertTrue(
            classUnderTest.getByYear("2021").count() > 0,
            "someLibraryMethod should return 'true'"
        )
    }

    @Test
    fun test_exception_year_is_not_number() {
        val classUnderTest = HolidaysCo()
        assertFailsWith<IllegalArgumentException>(message = "The year is not a number", block = {
            classUnderTest.getByYear("abcd")
        })
    }

    @Test
    fun test_exception_year_is_empty() {
        val classUnderTest = HolidaysCo()
        assertFailsWith<IllegalArgumentException>(message = "No year provided", block = {
            classUnderTest.getByYear()
        })
    }

    @Test
    fun test_success_year_2021() {
        val classUnderTest = HolidaysCo()
        val results = classUnderTest.getByYear("2021")

        assert(results.count() > 0)
        results.forEachIndexed { idx, item ->
            expect(TestData.holiday2021TestData[idx], block = {
                item.holiday
            })
        }
    }

    @Test
    fun test_success_year_2022() {
        val classUnderTest = HolidaysCo()
        val results = classUnderTest.getByYear("2022")

        assert(results.count() > 0)
        results.forEachIndexed { idx, item ->
            expect(TestData.holiday2022TestData[idx], block = {
                item.holiday
            })
        }
    }
}
